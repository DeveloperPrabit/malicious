name: Build and Release .exe

on:
  push:
    tags:
      - 'v*' # Trigger workflow only when a version tag (e.g., v1.0.6) is pushed

permissions:
  contents: write # Allows creating a release and uploading assets

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          pip install pyinstaller
          pip install requests
          pip install psutil

      # Step 4: Build the executable file
      - name: Build .exe
        run: pyinstaller --onefile main.py

      # Step 5: Create a GitHub release if it doesn't exist
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }} # Use PAT or GITHUB_TOKEN

      # Step 6: Upload the built .exe file as a release asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/main.exe
          asset_name: main.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }} # Use PAT or GITHUB_TOKEN
